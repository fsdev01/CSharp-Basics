#pragma checksum "/Users/user/Projects/ContosoCrafts/ContosoCrafts/Components/ProductList.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "20b6ff13f9a506a27102fe12feca3e728d0a5320"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace ContosoCrafts.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/user/Projects/ContosoCrafts/ContosoCrafts/Components/ProductList.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/user/Projects/ContosoCrafts/ContosoCrafts/Components/ProductList.razor"
using ContosoCrafts.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/user/Projects/ContosoCrafts/ContosoCrafts/Components/ProductList.razor"
using ContosoCrafts.WebSite.Services;

#line default
#line hidden
#nullable disable
    public partial class ProductList : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 85 "/Users/user/Projects/ContosoCrafts/ContosoCrafts/Components/ProductList.razor"
       
    Product selectedProduct;
    string selectedProductId;

    void SelectProduct(string productId)
    {
        // Data Binding
        selectedProductId = productId;
        selectedProduct = ProductService.GetProducts().First(x => x.Id == productId);
        GetCurrentRating(); // Get current rating when user select the product
    }

    int currentRating = 0; // initalise rating to 0 (rounded integer)
    int voteCount = 0; // count # of votes
    string voteLabel; // display vote string (e.g. 1 vote or 2 votes)

    // Get current rating (average) from JSON file
    void GetCurrentRating()
    {
        // If rating is currently null
        if (selectedProduct.Ratings == null)
        {
            currentRating = 0;
            voteCount = 0;
        }
        // If rating has an array
        else
        {
            // Count number of votes in the array
            voteCount = selectedProduct.Ratings.Count();

            // Generate label/string for # of votes
            // 1 vote (singular) or 2,3,4,5... votes plural
            voteLabel = voteCount > 1 ? "Votes" : "Vote";

            // current rating
            currentRating = selectedProduct.Ratings.Sum() / voteCount;
        }

        System.Console.WriteLine($"Current rating for {selectedProduct.Id}: {currentRating}");
    }

    // Update the current rating in the JSON file
    void SubmitRating(int rating)
    {
        System.Console.WriteLine($"Rating received for {selectedProduct.Id} : {rating}");
        // Use Product Service to update the rating in JSON file (don't need to serialize manually)
        ProductService.AddRating(selectedProductId, rating);
        SelectProduct(selectedProductId); 
    }




#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private JsonFileProductService ProductService { get; set; }
    }
}
#pragma warning restore 1591
